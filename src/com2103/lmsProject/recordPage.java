package com2103.lmsProject;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;

public class recordPage {
    private JTable tblRecord;
    private JPanel recordPanel;
    private JButton showAllRecordButton;
    private Connection con;


    public recordPage(Connection con) {
        this.con = con;

        showAllRecordButton.addActionListener(e -> {
            try {

                PreparedStatement ps = con.prepareStatement(
                        "select br.borrower_id, br.book_id, b.title, br.borrow_date, br.return_date from " +
                                "borrow_records br, " +
                                "books b " +
                                "where br.book_id = b.book_id");

                System.out.println(ps);
                ResultSet rs = ps.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();

                tblRecord.setModel(new DefaultTableModel());
                DefaultTableModel model = (DefaultTableModel) tblRecord.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++)
                    colName[i] = rsmd.getColumnLabel(i + 1);
                model.setColumnIdentifiers(colName);

                while (rs.next()) {
                    String borrower_id = rs.getString(1);
                    String book_id = rs.getString(2);
                    String title = rs.getString(3);
                    String borrow_date = rs.getString(4);
                    String return_date = rs.getString(5);
                    String[] row = {borrower_id, book_id, title, borrow_date, return_date};
                    model.addRow(row);
                }


            } catch (Exception exception) {
                System.out.println("Error: " + exception.getMessage());
            }
        });

    }

    public JPanel getter() {
        return this.recordPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        recordPanel = new JPanel();
        recordPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        recordPanel.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tblRecord = new JTable();
        scrollPane1.setViewportView(tblRecord);
        showAllRecordButton = new JButton();
        showAllRecordButton.setText("Show All Record");
        recordPanel.add(showAllRecordButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return recordPanel;
    }
}


