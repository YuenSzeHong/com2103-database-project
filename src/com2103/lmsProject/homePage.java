package com2103.lmsProject;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.sql.Connection;
import java.time.Instant;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Locale;


public class homePage extends JFrame {

    private JPanel homePanel;
    private JButton button1;
    private JTabbedPane tabbedPanel;
    private JLabel welcomeText;
    private JLabel dateText;
    private Instant currentDate;
    private File config;
    private BufferedReader br;
    private PrintWriter writer;

    public homePage(Connection connection) {

        /*create your Jform and add it your tabbedPanel here
          about addTab() method: addTab("yourTabbedPanelNameHere", yourJformFileName.getter())
          build getter() method in your (YourJformName).java file.
         */

        config = new File("date.txt");
        try {
            config.createNewFile();
        } catch (IOException e) {
            System.out.println("Error creating date.txt");
            System.exit(1);
        }
        try {
            br = new BufferedReader(new FileReader(config));
        } catch (FileNotFoundException e) {
            System.out.println("Error in reading date.txt");
            System.exit(1);
        }
        String line;
        try {
            while ((line = br.readLine()) != null) {
                currentDate = Instant.parse(line);
            }
            if (currentDate == null) {
                currentDate = Instant.now();
                writer = new PrintWriter(config);
                writer.println(currentDate);
                writer.flush();
                writer.close();
            }
        } catch (IOException e) {
            System.out.println("Error in reading date.txt");
            System.exit(1);
        }

        dateText.setText("Today is " + currentDate.atZone(ZoneOffset.UTC).toLocalDate());

        dateText.setText("Today is " + currentDate.atZone(ZoneOffset.UTC).toLocalDate()
                .format(DateTimeFormatter.ofPattern("dd MMMM yyyy", new Locale("en", "US"))));

        usersPage users = new usersPage(connection);
        tabbedPanel.addTab("users", users.getter());

        book books = new book(connection);
        tabbedPanel.addTab("books", books.getter());

        borrowedPage borrowedPages = new borrowedPage(connection);
        tabbedPanel.addTab("borrowed book", borrowedPages.getter());

        datePage datePages = new datePage(this);
        tabbedPanel.addTab("date", datePages.getter());

        rankPage rankPages = new rankPage(connection);
        tabbedPanel.addTab("rank", rankPages.getter());
    }

    public void setCurrentDate(Instant currentDate) {
        this.currentDate = currentDate;
        System.out.println(currentDate);
        dateText.setText("Today is " + this.currentDate.atZone(ZoneOffset.UTC).toLocalDate()
                .format(DateTimeFormatter.ofPattern("dd MMMM yyyy", new Locale("en", "US"))));
    }

    public JPanel getter() {
        return this.homePanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        homePanel = new JPanel();
        homePanel.setLayout(new GridLayoutManager(2, 5, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Welcome to Library Management System");
        homePanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        homePanel.add(panel1, new GridConstraints(1, 0, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        tabbedPanel = new JTabbedPane();
        panel1.add(tabbedPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return homePanel;
    }

}
